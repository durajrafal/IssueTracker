@using IssueTracker.UI.Models.Issues;
@using IssueTracker.Domain.Enums;
@using IssueTracker.UI.HtmlHelpers;
@using IssueTracker.UI.CommonHelpers;

@model IssueViewModel

@{
    ViewData["Title"] = $"Issue #{Model.Id}";

    (int lowestPaginationPage, int highestPaginationPage) = PaginationHelpers.CalculatePaginationButtons(Model.Audit.AuditEvents);
}

<article class="card mt-2">
    <div class="card-header">
        <div class="d-flex justify-content-between gap-1">
            <div>
                <span class="fs-4 me-2">#@Model.Id</span>
                <span class="fs-4 me-2 text-break">@Model.Title.ToUpper()</span>
                <span class="fs-6 text-muted">in @Model.Project.Title.ToUpper() Project</span>
            </div>
            <div class="d-flex gap-2">
                <a class="btn btn-primary d-flex align-items-center" asp-action="Edit" asp-route-projectid="@Model.Project.Id" asp-route-id="@Model.Id"><i class="bi bi-pencil-square text-white"></i></a>
                <a class="btn btn-dark d-flex align-items-center" asp-controller="Projects" asp-action="Details" asp-route-id="@Model.Project.Id"><i class="bi bi-x-lg text-white"></i></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row gx-5">
            <div class="col-lg-6">
                @Html.LabelOverLine("Description", "bi-info-circle")
                <p class="ps-2">@Model.Description</p>
            </div>
            <div class="col-lg-3 col-6">
                @Html.LabelOverLine("Status", "bi-question-circle")
                <div class="ps-2">@Model.Status.ToUserFriendlyString()</div>
            </div>
            <div class="col-lg-3 col-6">
                @Html.LabelOverLine("Priority", "bi-exclamation-triangle")
                <div class="ps-2">@Model.Priority</div>
            </div>
        </div>
        <div class="row gx-5 mt-2">
            <div class="col-lg-6">
                @Html.LabelOverLine("Comments", "bi-chat-left-text")
            </div>
            <div class="col-lg-6">
                <div>
                    @Html.LabelOverLine("Members", "bi-person-fill")
                    <div class="ps-2">
                        @foreach (var member in Model.Members)
                        {
                            <div>@member.User.FullName</div>
                        }
                        <a href="#" class="btn btn-primary mt-1"><i class="bi bi-person-fill-gear me-2"></i>Manage</a>
                    </div>
                </div>
                <div class="mt-2">
                    @Html.LabelOverLine("History", "bi-book")
                    @if (Model.Audit.AuditEvents.TotalCount == 0)
                    {
                        <p class="text-light text-center">Nothing to show...</p>
                    }
                    else
                    {

                        <table class="table table-dark table-striped">
                            <thead class="table-light text-secondary">
                                <tr>
                                    <th scope="col">Time</th>
                                    <th scope="col">User</th>
                                    <th scope="col">Event</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Audit.AuditEvents.Items)
                                {
                                    <tr>
                                        <td style="vertical-align:middle;" scope="row">@item.Timestamp.ToLocalTime()</td>
                                        <td style="vertical-align:middle;" scope="row">@item.ModifiedBy.FullName</td>
                                        <td class="text-break text-wrap" style="width:99%; vertical-align:middle;" scope="row">@item.GetSummaryText()</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div>
                            <ul class="pagination pagination-sm">
                                <li class="page-item @(CssHelpers.AddClassConditionally(!Model.Audit.AuditEvents.HasPreviousPage, "disabled"))">
                                    <a class="page-link" asp-route-page="@(Model.Audit.AuditEvents.PageNumber-1)">&laquo;</a>
                                </li>
                                @for (int i = lowestPaginationPage; i <= highestPaginationPage; i++)
                                {
                                    <li class="page-item @(CssHelpers.AddClassConditionally(Model.Audit.AuditEvents.PageNumber == i, "active"))">
                                        <a class="page-link" asp-route-page="@i">@i</a>
                                    </li>
                                }
                                <li class="page-item @(CssHelpers.AddClassConditionally(!Model.Audit.AuditEvents.HasNextPage, "disabled"))">
                                    <a class="page-link" asp-route-page="@(Model.Audit.AuditEvents.PageNumber+1)">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
    <div class="card-footer text-muted d-flex justify-content-end" style="font-size:.8rem;">
        @if (Model.Audit.LastModified is not null && Model.Audit.LastModifiedBy is not null)
        {
            <span>
                Last modified @Model.Audit.LastModified.Value.ToLocalTime() by @Model.Audit.LastModifiedBy.FullName
            </span>
        }
        else
        {
            <span>
                Created @Model.Audit.Created.ToLocalTime() by @Model.Audit.CreatedBy?.FullName
            </span>
        }
    </div>
</article>